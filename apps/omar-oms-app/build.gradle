buildscript {
    ext {
        grailsVersion = project.grailsVersion
        baseImage = "omar-ossim-base"
     dockerStatementsOverride = {
       [
          "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",

          "MAINTAINER RadiantBlue Technologies radiantblue.com",
          "ENV HOME /usr/share/omar",
          "ADD run.sh /usr/share/omar/"
          """RUN groupadd fuse &&\
                 useradd -u 1001 -r -g 0 -d \$HOME -s /sbin/nologin \
                      -c 'Default Application User' omar && \
                 yum -y install fuse curl ossim ossim-kakadu-plugin \
                        ossim-web-plugin ossim-jpeg12-plugin ossim-sqlite-plugin \
                        ossim-geopdf-plugin ossim-png-plugin ossim-gdal-plugin \
                        ossim-aws-plugin&& \
                 yum clean all&& \
                 mkdir -p /usr/local/bin &&\
                 mkdir /usr/share/omar &&\
                 curl -k -s "https://s3.amazonaws.com/ossimlabs/dependencies/riofs/riofs" -o /usr/bin/riofs && \
                 mkdir -p /s3 && chown -R 1001:0 /s3 && chmod 777 /s3 && \
                 chmod ugo+x /usr/bin/riofs && \
                 echo "user_allow_other" > /etc/fuse.conf && \
                 chown -R 1001:0 /usr/share/omar &&\
                 chown 1001:0 /usr/share/omar &&\
                 chmod -R g+rw /usr/share/omar &&\
                 chmod +x /usr/share/omar/run.sh &&\
                 find \$HOME -type d -exec chmod g+x {} +""",
          "USER 1001", 
          "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar /usr/share/omar",
          """RUN chown -R 1001:0 /usr/share/omar""",
          "WORKDIR /usr/share/omar",
          "expose 8080",
          "CMD /usr/share/omar/run.sh"
//          "CMD java -server -Xms256m -Xmx1024m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+UseGCOverheadLimit -Djava.security.egd=file:/dev/./urandom -jar /usr/share/omar/${project.name}-${buildVersion}-${buildVersionTag}.jar"
       ]
     }
    }
    if(System.env.OMAR_COMMON_PROPERTIES)
    {
        apply from: System.env.OMAR_COMMON_PROPERTIES
    }
    repositories {
        mavenLocal()
        maven { url "${ossimMavenProxy}" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:hibernate4:5.0.10"
    }
}

plugins {
  id "com.github.ben-manes.versions" version "0.13.0"
}

group "io.ossim.omar.apps"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
  minifyJs = true
  minifyCss = true
  includes = ["fonts/*"]
  excludes = ["**/*-debug.js", "**/*-deps.js", "**/*.gz", "**/*.txt", "**/*.less", "**/*.html", "**/i18n/**", "**/",
      ".grunt/**", "**/locale/**", "webjars/jquery/2.1.4/src/intro.js", "webjars/jquery/2.1.4/src/outro.js"]
}

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.SR7"
    }
    applyMavenExclusions false
}

dependencies {
    if ( System.getenv('O2_DEV_HOME')) {
        compile project(':omar-oms-plugin')
    } else {
        compile(group: "io.ossim.omar.plugins", name: "omar-oms-plugin", version: "1.1.0-${buildVersionTag}", changing: jarArtifactsChanging)
    }

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile "org.springframework.cloud:spring-cloud-starter-config"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
